node{
  def mavenHome = tool name: "maven3.8.6"
  stage('1cloneCode'){
    git "https://github.com/landmarkconquerors/maven-web-application"
  }
  stage('2Test&Build'){
    sh "${mavenHome}/bin/mvn clean package"
    //bat "${mavenHome}/bin/mvn cleann package"
  }
  stage('3codeQuality'){
    sh "${mavenHome}/bin/mvn clean sonar:sonar"
  }
  stage('4uploadArtifacts'){
   //sh "${mavenHome}/bin/mvn deploy"
   //http://54.226.158.106:8081/repository/tesla-fe-snapshots/
   //http://54.226.158.106:8081/repository/tesla-fe-releases/
   // vi pom.xml and added repository details
   // vi settings.xml and add AUTHENTICATION details
  }
  stage('5deploy2UAT'){
  sh "echo 'deploy to UAT'"
  deploy adapters: [tomcat9(credentialsId: 'credentials-tomcat', path: '', url: 'http://3.235.84.192:8080/')], contextPath: null, war: 'target/*war'
  }
  stage('6approvalGate'){
  sh "echo 'ready to review' "
  timeout(time:5, unit:'DAYS'){
  input message: 'Application ready for deployment, please review and approve'
    }
  }
  stage('7deploytoProd'){
      deploy adapters: [tomcat9(credentialsId: 'credentials-tomcat', path: '', url: 'http://3.235.84.192:8080/')], contextPath: null, war: 'target/*war'
  }
  stage('8emailNotification'){
  emailext body: '''Hi All,

Check build status

Landmark Technologies''', recipientProviders: [buildUser(), developers(), upstreamDevelopers(), brokenBuildSuspects(), brokenTestsSuspects(), contributor()], subject: 'build status', to: 'tesla-app@gmail.com'}
  }
  }
